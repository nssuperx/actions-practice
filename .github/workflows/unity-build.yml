name: Build project (Windows-Mono)

on: 
  push:
    branches:
      - main
      - ci

env:
  cache-version: v1.0

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - windows
        unity: 
          - 2021.3.3f1
    container:
      # https://hub.docker.com/r/unityci/editor
      image: unityci/editor:ubuntu-${{ matrix.unity }}-${{ matrix.targetPlatform }}-mono-1.0.1
    steps:
      - name: Setup Unity container
        run: |
          apt update
          apt install software-properties-common rsync -y
          add-apt-repository ppa:git-core/ppa
          apt install git -y
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ env.cache-version }}
          restore-keys: Library-
      - run: echo -n "$UNITY_LICENSE" >> .Unity.ulf
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      - name: activate unity license
        run: /opt/unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .Unity.ulf || exit 0
      - name: Download unitypackage
        run: |
          echo -n "${{ secrets.SSH_KEY }}" >> .ssh_key
          chmod 600 .ssh_key
          scp -i .ssh_key -P ${{ secrets.SSH_PORT }} -o "StrictHostKeyChecking=no" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/${{ secrets.UNITYPACKAGE_FILEPATH }} ./
          ls
      - name: Import unitypackage
        run: /opt/unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -projectPath . -importPackage ${{ secrets.UNITYPACKAGE_FILEPATH }}
      - name: Import Test
        run: ls Assets/Prefabs
      - name: Build
        run: /opt/unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -projectPath . -executeMethod BuildClass.BuildWindowsMono
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: ./${{ matrix.targetPlatform }}Build
